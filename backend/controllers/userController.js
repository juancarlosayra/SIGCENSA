const bcrypt = require('bcryptjs');
const User = require('../models/User');

const createUser = async (req, res) => {
  const { name, pass } = req.body;

  try {
    // Validaci√≥n b√°sica
    if (!name || !pass) {
      return res.status(400).json({ message: 'Nombre y contrase√±a son obligatorios' });
    }

    // Verificar si el usuario ya existe
    const existingUser = await User.findOne({ name });

    if (existingUser) {
      return res.status(400).json({ message: 'El nombre de usuario ya est√° en uso' });
    }

    // üîê Encriptar la contrase√±a
    const hashedPass = await bcrypt.hash(pass, 10); // 10 es el n√∫mero de rondas de encriptaci√≥n

    // Crear el nuevo usuario
    const newUser = await User.create({
      name,
      pass: hashedPass // ‚úÖ Guardamos la contrase√±a en formato hash
    });

    // Responder con √©xito
    res.status(201).json({
      message: 'Usuario creado correctamente',
      user: {
        name: newUser.name
      }
    });

  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Error al crear el usuario' });
  }
};

module.exports = { createUser };